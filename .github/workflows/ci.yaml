name: Go Web App CI Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/go-web-app
  IMAGE_TAG: ${GITHUB_SHA}

jobs:
  build-test-publish:
    runs-on: ubuntu-latest

    # 🔐 Prevent infinite loop: skip job if commit message is from the CI bot
    if: "!contains(github.event.head_commit.message, 'Update image tag to')"

    steps:
    # 📂 Step 1: Checkout source code from GitHub
    - name: Checkout repository
      uses: actions/checkout@v3

    # 🧠 Step 2: Set up Go environment
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'

    # 🔨 Step 3: Build the Go app
    - name: Build Go app
      run: go build -v ./...

    # ✅ Step 4: Run unit tests
    - name: Run tests
      run: go test -v ./...

    # 🔐 Step 5: Log in to Docker Hub using secrets
    - name: Docker login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 🐳 Step 6: Build Docker image tagged with commit SHA
    - name: Build Docker image
      run: docker build -t $DOCKER_IMAGE:${IMAGE_TAG} .

    # 📦 Step 7: Push Docker image to Docker Hub
    - name: Push Docker image
      run: docker push $DOCKER_IMAGE:${IMAGE_TAG}

    # 📝 Step 8: Update Helm values.yaml with the new image tag
    - name: Update Helm chart image tag and push
      run: |
        sed -i "s/^  tag: .*/  tag: \"${IMAGE_TAG}\"/" helm/values.yaml  # 🔁 Replace tag line
        git config user.name "ci-bot"  # 👤 Bot identity
        git config user.email "ci-bot@example.com"
        git add helm/values.yaml
        git commit -m "Update image tag to ${IMAGE_TAG}" || echo "No changes to commit"  # 🛡️ Avoid failure on no changes
        git push
